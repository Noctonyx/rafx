[package]
name = "rafx"
version = "0.0.10"
authors = ["Philip Degarmo <aclysma@gmail.com>"]
edition = "2018"
description = "Rendering framework built on an extensible asset pipeline"
license = "MIT OR Apache-2.0"
readme = "../README.md"
repository = "https://github.com/aclysma/rafx"
homepage = "https://github.com/aclysma/rafx"
keywords = ["game", "rendering", "graphics"]
categories = ["game-development", "game-engines", "graphics", "multimedia", "rendering::engine"]

[dependencies]
rafx-base = { version = "=0.0.10", path = "../rafx-base" }
rafx-api = { version = "=0.0.10", path = "../rafx-api" }
rafx-framework = { version = "=0.0.10", path = "../rafx-framework", optional = true }
rafx-assets = { version = "=0.0.10", path = "../rafx-assets", optional = true }
rafx-renderer = { version = "=0.0.10", path = "../rafx-renderer", optional = true }

[dev-dependencies]
log = "0.4"
env_logger = "0.6"
legion = { version = "0.4.0", default-features = false }
sdl2 = { version = ">=0.34", features = ["raw-window-handle"] }
ash = ">=0.32"
glam = "0.8.6"
profiling = "0.1.9"
bincode = "1.3.1"

[features]
default = []

#
# Backends
#
rafx-empty = ["rafx-api/rafx-empty"]
rafx-vulkan = ["rafx-api/rafx-vulkan"]
rafx-metal = ["rafx-api/rafx-metal"]

# Vulkan-specific feature, use statically-linked vulkan instead of dynamically loading it
static-vulkan = ["rafx-api/static-vulkan"]

# These control how much of the library (and dependencies) we include
# API/Base: (Always included) Raw graphics API abstraction with multiple backends. Some data structures.
# Nodes: A data structure and job system for gathering and drawing renderables. Includes the concepts of views and
#        phases.
# Resources: Object lifetime tracking and render graph
# Assets: Integrates distill to provide a full asset pipeline
#nodes = ["rafx-nodes", "rafx-visibility"]
framework = ["rafx-framework"]
assets = ["rafx-assets", "framework"]
renderer = ["rafx-renderer", "assets"]

#
# Profiling features - passes down features to crates contained within this one
#
profile-with-puffin = [
    "rafx-framework/profile-with-puffin",
    "rafx-assets/profile-with-puffin",
    "rafx-api/profile-with-puffin",
    "rafx-renderer/profile-with-puffin"
]

profile-with-optick = [
    "rafx-framework/profile-with-optick",
    "rafx-assets/profile-with-optick",
    "rafx-api/profile-with-optick",
    "rafx-renderer/profile-with-optick"
]

profile-with-superluminal = [
    "rafx-framework/profile-with-superluminal",
    "rafx-assets/profile-with-superluminal",
    "rafx-api/profile-with-superluminal",
    "rafx-renderer/profile-with-superluminal"
]

profile-with-tracy = [
    "rafx-framework/profile-with-tracy",
    "rafx-assets/profile-with-tracy",
    "rafx-api/profile-with-tracy",
    "rafx-renderer/profile-with-tracy"
]

#
# Examples
#

[[example]]
name = "nodes_api_design"
path = "../rafx/examples/nodes_api_design/nodes_api_design.rs"
required-features = ["framework"]

[[example]]
name = "api_triangle"
path = "examples/api_triangle/api_triangle.rs"
required-features = []

[[example]]
name = "framework_triangle"
path = "examples/framework_triangle/framework_triangle.rs"
required-features = ["framework"]

[[example]]
name = "asset_triangle"
path = "examples/asset_triangle/asset_triangle.rs"
required-features = ["assets"]
